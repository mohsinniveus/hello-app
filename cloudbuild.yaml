steps:
  - id: 'build'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/hello-app:latest'
      - '.'
  - id: 'publish'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/hello-app:latest'
  - name: gcr.io/$PROJECT_ID/cloudbuild-attestor
    id: 'Check Vulnerability Scan results'
    entrypoint: 'sh'
    args:
      - -xe
      - -c
      - |
         /scripts/check_vulnerabilities.sh -p $PROJECT_ID -i gcr.io/$PROJECT_ID/hello-app:latest -t 5
  - name: 'gcr.io/$PROJECT_ID/cloudbuild-attestor'
    id: 'Attest Vulnerability Scan'
    entrypoint: 'sh'
    args:
      - -xe
      - -c
      - |-
          FQ_DIGEST=$(gcloud container images describe --format 'value(image_summary.fully_qualified_digest)' gcr.io/$PROJECT_ID/hello-app:latest)
          /scripts/create_attestation.sh \
            -p "$PROJECT_ID" \
            -i "$${FQ_DIGEST}" \
            -a "$_VULNZ_ATTESTOR" \
            -v "$_VULNZ_KMS_KEY_VERSION" \
            -k "$_VULNZ_KMS_KEY" \
            -l "$_KMS_LOCATION" \
            -r "$_KMS_KEYRING"
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Generate Kubernetes manifest'
    entrypoint: /bin/sh
    args:
      - '-c'
      - |-
          DIGEST=$(gcloud container images describe --format 'value(image_summary.digest)' gcr.io/$PROJECT_ID/hello-app:latest)
          sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes/deployment.yaml.tpl | \
          sed "s/DIGEST/$${DIGEST}/g" > kubernetes/deployment.yaml
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'Deploy to staging'
    args: ['apply', '-f', 'kubernetes/']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=$_COMPUTE_REGION'
      - 'CLOUDSDK_CONTAINER_CLUSTER=$_STAGING_CLUSTER'
tags: ['cloud-builders-community']